services:
    frontend:
        build:
            context: .
            dockerfile: ./docker/frontend/Dockerfile.dev
        depends_on:
           - backend
        ports:
            - "4200:4200"
            - "81:80"
        volumes:
            - ./frontend:/var/www/html
            - ./docker/apache/frontend.conf:/etc/apache2/sites-available/000-default.conf
        environment:
            - NODE_ENV=development
            - APACHE_DOCUMENT_ROOT=/var/www/html/dist/srs-frontend
        working_dir: /var/www/html
        entrypoint: ["/bin/sh","-c"]
        command:
            - |
               yarn
               apache2-foreground & ng serve --host=0.0.0.0
        networks:
          - srs-net

    backend:
        build:
            context: .
            dockerfile: ./docker/backend/Dockerfile
        depends_on:
            - mysql
            - mongo
        ports:
            - "80:80"
            - "9003:9003"
        volumes:
            - ./backend:/var/www/html
            - ./docker/apache/backend.conf:/etc/apache2/sites-available/000-default.conf
            - ./docker/php/php-ini-overrides.ini:/usr/local/etc/php/conf.d/99-overrides.ini
        environment:
            - APACHE_DOCUMENT_ROOT=/var/www/html/public
        working_dir: /var/www/html
        entrypoint: ["/bin/sh","-c"]
        command:
            - |
               composer install --no-interaction --no-scripts --no-autoloader
               composer dump-autoload --optimize
               apache2-foreground
        networks:
          - srs-net

    mysql:
        image: mysql:8.0
        environment:
            - MYSQL_ROOT_PASSWORD=justatestpassshouldntcommit
            - MYSQL_DATABASE=backend
            - MYSQL_USER=backend
            - MYSQL_PASSWORD=justatestpassshouldntcommit
        volumes:
            - mysqldata:/var/lib/mysql
            - ./docker/mysql/my.cnf:/etc/mysql/conf.d/my.cnf
        ports:
            - '3306:3306'
        networks:
          - srs-net

    mongo:
        image: mongo:7.0
        container_name: mongo
        ports:
          - '27017:27017'
        environment:
          MONGO_INITDB_ROOT_USERNAME: mongo
          MONGO_INITDB_ROOT_PASSWORD: justatestpassshouldntcommit
        volumes:
          - mongodata:/data/db/
        networks:
          - srs-net

        
volumes:
    mysqldata:  
        driver: local
        driver_opts:
            type: none
            device: ./docker/mysql/data
            o: bind
    mongodata:  
        driver: local
        driver_opts:
            type: none
            device: ./docker/mongo/data
            o: bind
            

networks:
    srs-net:
        driver: bridge